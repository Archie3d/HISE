/** Autogenerated CPP file from /Volumes/Shared/Development/HISE modules/extras/demo_project/Scripts/SineGenerator.c */



class SineGenerator: public DspBaseObject, public TccLibraryFunctions
{
public:

	// ============================================================================================
	
	SineGenerator() { initialise(); }; 
	~SineGenerator() { release(); }; 
	static Identifier getName() { RETURN_STATIC_IDENTIFIER("SineGenerator"); }
	
	// ============================================================================================
	
	void initialise()
	{
		uptime = 0.0;
	    gain = 0.5f;
	}
	
	void release() {}
	
	int getNumParameters() const override
	{
	    return 1;
	}
	
	float getParameter(int index) const override
	{    
		return 1.0f;
	}
	
	void setParameter(int index, float newValue) override
	{
	    gain = newValue;
	}
	
	void prepareToPlay(double sampleRate, int samplesPerBlock) override
	{
	    uptimeDelta = 0.08;
	}
	
	void processBlock(float** data, int numChannels, int numSamples) override 
	{
	    float* d = data[0];
	
	    for(int i = 0; i < numSamples; i++)
	    {
	        *d++ = sin(uptime);
	        uptime += uptimeDelta;
	    }
	
	    vMultiplyScalar(data[0], gain, numSamples);
	
	    if(numChannels == 2)
	    {
	        vCopy(data[1], data[0], numSamples);
	    }
	}

	// ============================================================================================
	
private:
	double uptime;
	double uptimeDelta;
	float gain;
};
