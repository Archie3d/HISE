/** Demo Instrument
*
*	This patch is a demonstration of the most basic HISE features.
*/

// Load a background image
bgImage = Content.addImage("bgImage", 0, 0);
// [JSON bgImage]
Content.setPropertiesFromJSON("bgImage", {
  "width": 700,
  "height": 450,
  "fileName": "{PROJECT_FOLDER}bg.png"
});
// [/JSON bgImage]

var toolbarData = {
  "height": 32,
  "overlaying": false,
  "bgColour": 267386880,
  "cpuTempoVoicesShown": true,
  "presetShown": false,
  "tooltipBarShown": true,
  "keyboard": true,
  "knobsShown": true,
  "knobFilmStrip": "",
  "knobNumFilmStrips": 0,
  "outputMeterShown": true
};

Content.setToolbarProperties(toolbarData);

// Tell the engine to use this script as main interface
Content.makeFrontInterface(bgImage.get("width"), bgImage.get("height"));

// Set the key colours randomly
for(i = 0; i < 50; i++)
{
	Engine.setKeyColour(i, 0x88000000);
}

for(i = 50; i < 90; i++)
{
	Engine.setKeyColour(i, 0x22ffffff);
}

for(i = 90; i < 128; i++)
{
	Engine.setKeyColour(i, 0x88000000);
}

// Set the lowest visible key
Engine.setLowestKeyToDisplay(28);

/** Creates the slider. This is a autogenerated UI Factory function. */
inline function createVolumeSlider(name, x, y)
{
	local widget = Content.addKnob(name, x, y);
    
    Content.setPropertiesFromJSON(name, {
      "text": "Volume",
      "min": -100,
      "max": 0,
      "mode": "Decibel",
      "stepSize": 0.10000000000000000555,
      "suffix": " dB"
    });
    
    return widget;
};

const var volumeSlider = createVolumeSlider("volumeSlider", 277, 111);

const var SimpleGain = Synth.getEffect("Simple Gain");

// This is a table that connects to the sampler's velocity modulator
const var velocityTable = Content.addTable("velocityTable", 115, 196);
// [JSON velocityTable]
Content.setPropertiesFromJSON("velocityTable", {
  "width": 470,
  "height": 189,
  "processorId": "SamplerVelocity"
});
// [/JSON velocityTable]function onNoteOn()
{
	
}
function onNoteOff()
{
	
}
function onController()
{
	
}
function onTimer()
{
	
}
function onControl(number, value)
{
	switch(number)
	{
		case volumeSlider:
		{
			SimpleGain.setAttribute(SimpleGain.Gain, value);
			break;
		}
	};
}
