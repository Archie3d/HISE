/** Demo Instrument
*
*	This patch is a demonstration of the most basic HISE features.
*/

// Set the size of the interface
Content.setHeight(300);
Content.setWidth(600);

// Tell the engine to use this script as main interface
Synth.addToFront(true);

// This creates an object that controls the Convolution Reverb below
ConvolutionReverb = Synth.getEffect("Convolution Reverb");

// Adds the background panel
bgPanel = Content.addPanel("bgPanel", 10, 10);

// This is autogenerated metadata (but can be edited)
// [JSON bgPanel]
Content.setPropertiesFromJSON("bgPanel", {
  "width": 580,
  "height": 280,
  "itemColour": 822083583,
  "itemColour2": 813727872
});
// [/JSON bgPanel]

// Ads a slider that controls the Volume
volumeSlider = Content.addKnob("volumeSlider", 150, 128);
// [JSON volumeSlider]
Content.setPropertiesFromJSON("volumeSlider", {
  "text": "Volume",
  "min": -100,
  "max": 0,
  "macroControl": "Macro 1",
  "mode": "Decibel",
  "stepSize": 0.10000000000000001,
  "middlePosition": -12
});
// [/JSON volumeSlider]

// Adds a slider that controls the wet amount of the convolution reverb (which is a simple tap IR)
delaySlider = Content.addKnob("delaySlider", 350, 128);
// [JSON delaySlider]
Content.setPropertiesFromJSON("delaySlider", {
  "text": "Delay",
  "min": -100,
  "max": 0,
  "macroControl": "Macro 2",
  "mode": "Decibel",
  "stepSize": 0.10000000000000001,
  "middlePosition": -12
});
// [/JSON delaySlider]


// Set the key colours randomly
for(i = 0; i < 50; i++)
{
	Engine.setKeyColour(i, 0x88000000);
}

for(i = 50; i < 90; i++)
{
	Engine.setKeyColour(i, 0x22ffffff);
}

for(i = 90; i < 128; i++)
{
	Engine.setKeyColour(i, 0x88000000);
}

// Set the lowest visible key
Engine.setLowestKeyToDisplay(38);


// Adds a really beautiful image to our already perfect interface...
designAwardImage = Content.addImage("designAwardImage", 222, 201);
// [JSON designAwardImage]
Content.setPropertiesFromJSON("designAwardImage", {
  "x": 197,
  "width": 233,
  "height": 37,
  "fileName": "{PROJECT_FOLDER}image.png"
});
// [/JSON designAwardImage]function onNoteOn()
{
	
}
function onNoteOff()
{
	
}
function onController()
{
	
}
function onTimer()
{
	
}
function onControl(number, value)
{
	if(number == volumeSlider)
	{
		// The volume will be changed using the macro control system
	}
	else if(number == delaySlider)
	{
		// This could also be done using the macro controls, but for demo purposes, this would be the scripting way:
		ConvolutionReverb.setAttribute(ConvolutionReverb.WetGain, value);
	}
}
