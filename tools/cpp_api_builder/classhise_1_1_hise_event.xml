<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classhise_1_1_hise_event" kind="class" prot="public">
    <compoundname>hise::HiseEvent</compoundname>
    <includes refid="_hise_event_buffer_8h" local="no">HiseEventBuffer.h</includes>
    <innerclass refid="structhise_1_1_hise_event_1_1_channel_filter_data" prot="public">hise::HiseEvent::ChannelFilterData</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57" prot="public" static="no">
        <name>Type</name>
        <enumvalue id="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57ace2c8aed9c2fa0cfbed56cbda4d8bf07" prot="public">
          <name>Empty</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>an empty event (as created by the default constructor) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57a392b06517dc40739343a9ef9533cad46" prot="public">
          <name>NoteOn</name>
          <briefdescription>
<para>a note on event (which will get a unique EventID upon creation). </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57a6138748b0dea7e54d0ab77709ab74ba1" prot="public">
          <name>NoteOff</name>
          <briefdescription>
<para>a note-off event (with the same EventID as its corresponding note-on) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57a9bbf373797bf7cf7ba62c80023682e25" prot="public">
          <name>Controller</name>
          <briefdescription>
<para>a MIDI CC message </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57accc5c5aaa32fc84dc9fae9dc5b26e28e" prot="public">
          <name>PitchBend</name>
          <briefdescription>
<para>a 14-bit pitch-bend message </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57a809bb61b794dede38872d877fdad2f08" prot="public">
          <name>Aftertouch</name>
          <briefdescription>
<para>an aftertouch message (both channel aftertouch and polyphonic aftertouch) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57a0e78b38d13b37daf46729e3fb1b4a355" prot="public">
          <name>AllNotesOff</name>
          <briefdescription>
<para>an all notes off message. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57a3f7cdb64cb1b2868355c89ae8259eb1c" prot="public">
          <name>SongPosition</name>
          <briefdescription>
<para>the position of the DAW transport </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57a478f70c049c88e5c72da428e801493b1" prot="public">
          <name>MidiStart</name>
          <briefdescription>
<para>indicated the start of the playback in the DAW </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57aa21c839e09f024feae7249c101e48af7" prot="public">
          <name>MidiStop</name>
          <briefdescription>
<para>indicates the stop of the DAW playback </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57a816acb1c4e6f05b955cbbdbbd575e529" prot="public">
          <name>VolumeFade</name>
          <briefdescription>
<para>a volume fade that is applied to all voices started with the given EventID </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57af2223ec745e33b82ec35ea9a6d26f9ef" prot="public">
          <name>PitchFade</name>
          <briefdescription>
<para>a pitch fade that is applied to all voices started with the given EventID </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57a08e87b9812e10feddb469730c843473a" prot="public">
          <name>TimerEvent</name>
          <briefdescription>
<para>this event will fire the onTimer callback of MIDI Processors. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57af6c3d6e0b367daef634ebe1d1a2a34aa" prot="public">
          <name>ProgramChange</name>
          <briefdescription>
<para>the MIDI ProgramChange message. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57a6827357ecd2615bea94ab575943ea0a8" prot="public">
          <name>numTypes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The type of the event. The most important MIDI types are there, but there are a few more interesting types for internal HISE stuff. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="83" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="82" bodyend="99"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhise_1_1_hise_event_1aa50a86d272f03f1b1886fcf20b8b2f25" prot="private" static="no" mutable="no">
        <type><ref refid="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57" kindref="member">Type</ref></type>
        <definition>Type hise::HiseEvent::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <initializer>= <ref refid="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57ace2c8aed9c2fa0cfbed56cbda4d8bf07" kindref="member">Type::Empty</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="452" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhise_1_1_hise_event_1a22e3d5a3c27e2b4e56f66089a3a5c3cb" prot="private" static="no" mutable="no">
        <type>uint8</type>
        <definition>uint8 hise::HiseEvent::channel</definition>
        <argsstring></argsstring>
        <name>channel</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="453" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhise_1_1_hise_event_1a29b2105be84a171877e4f6badad767de" prot="private" static="no" mutable="no">
        <type>uint8</type>
        <definition>uint8 hise::HiseEvent::number</definition>
        <argsstring></argsstring>
        <name>number</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="454" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhise_1_1_hise_event_1a8bdc4561814104fa123b5c81961ffd33" prot="private" static="no" mutable="no">
        <type>uint8</type>
        <definition>uint8 hise::HiseEvent::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="455" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhise_1_1_hise_event_1a9f301962e8470b182ebf566de219c2d8" prot="private" static="no" mutable="no">
        <type>int8</type>
        <definition>int8 hise::HiseEvent::transposeValue</definition>
        <argsstring></argsstring>
        <name>transposeValue</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="457" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="457" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhise_1_1_hise_event_1ae77360edecc4f0072c35ec2027f320ad" prot="private" static="no" mutable="no">
        <type>int8</type>
        <definition>int8 hise::HiseEvent::gain</definition>
        <argsstring></argsstring>
        <name>gain</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="458" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhise_1_1_hise_event_1a762cf8d0baa660de3c495e47b8b7cf18" prot="private" static="no" mutable="no">
        <type>int8</type>
        <definition>int8 hise::HiseEvent::semitones</definition>
        <argsstring></argsstring>
        <name>semitones</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="459" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="459" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhise_1_1_hise_event_1a69b6f4c80c603ae83db17c586d5710d1" prot="private" static="no" mutable="no">
        <type>int8</type>
        <definition>int8 hise::HiseEvent::cents</definition>
        <argsstring></argsstring>
        <name>cents</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="460" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhise_1_1_hise_event_1aef2b7dab48aaaaec079599d37ae6d535" prot="private" static="no" mutable="no">
        <type>uint16</type>
        <definition>uint16 hise::HiseEvent::eventId</definition>
        <argsstring></argsstring>
        <name>eventId</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="462" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhise_1_1_hise_event_1a45c48dfbf30e6261e7a531f03e748ef5" prot="private" static="no" mutable="no">
        <type>uint16</type>
        <definition>uint16 hise::HiseEvent::startOffset</definition>
        <argsstring></argsstring>
        <name>startOffset</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="463" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhise_1_1_hise_event_1a0e04475a3c8322a1ee35cefddd82b0f8" prot="private" static="no" mutable="no">
        <type>uint32</type>
        <definition>uint32 hise::HiseEvent::timestamp</definition>
        <argsstring></argsstring>
        <name>timestamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="465" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="465" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhise_1_1_hise_event_1ab53eeb944ad2d1dbbebcdb197372837f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hise::HiseEvent::HiseEvent</definition>
        <argsstring>()</argsstring>
        <name>HiseEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an empty <ref refid="classhise_1_1_hise_event" kindref="compound">HiseEvent</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="102" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a3356e667ae8c81b6254ec4989e896de2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hise::HiseEvent::HiseEvent</definition>
        <argsstring>(const MidiMessage &amp;message)</argsstring>
        <name>HiseEvent</name>
        <param>
          <type>const MidiMessage &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a <ref refid="classhise_1_1_hise_event" kindref="compound">HiseEvent</ref> from a MIDI message. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="105" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="35" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1ad7d9324985507034cc39fd372fcc2799" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hise::HiseEvent::HiseEvent</definition>
        <argsstring>(Type type_, uint8 number_, uint8 value_, uint8 channel_=1)</argsstring>
        <name>HiseEvent</name>
        <param>
          <type><ref refid="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57" kindref="member">Type</ref></type>
          <declname>type_</declname>
        </param>
        <param>
          <type>uint8</type>
          <declname>number_</declname>
        </param>
        <param>
          <type>uint8</type>
          <declname>value_</declname>
        </param>
        <param>
          <type>uint8</type>
          <declname>channel_</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a <ref refid="classhise_1_1_hise_event" kindref="compound">HiseEvent</ref> with the given data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="108" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="61" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a16901bc947430dcd74bf9576461d5369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hise::HiseEvent::HiseEvent</definition>
        <argsstring>(const HiseEvent &amp;other) noexcept</argsstring>
        <name>HiseEvent</name>
        <param>
          <type>const <ref refid="classhise_1_1_hise_event" kindref="compound">HiseEvent</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a bit-wise copy of another event. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="111" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="70" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1ac18efb9afa0f633b82cb3e7476b1018b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>MidiMessage</type>
        <definition>juce::MidiMessage hise::HiseEvent::toMidiMesage</definition>
        <argsstring>() const </argsstring>
        <name>toMidiMesage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts the <ref refid="classhise_1_1_hise_event" kindref="compound">HiseEvent</ref> back to a MidiMessage. This isn&apos;t lossless obviously. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="114" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="83" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a2602b9de95fc3b36e63f3f11a354630f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hise::HiseEvent::operator==</definition>
        <argsstring>(const HiseEvent &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classhise_1_1_hise_event" kindref="compound">HiseEvent</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>checks whether the event is equal to another. This checks for bit-equality. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="118" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="120" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1aa36f2384615dc3710a675f58a9fa345d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::swapWith</definition>
        <argsstring>(HiseEvent &amp;other)</argsstring>
        <name>swapWith</name>
        <param>
          <type><ref refid="classhise_1_1_hise_event" kindref="compound">HiseEvent</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Swaps the event with another. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="121" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="100" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a1dc5ec8e5d8a79c753446f7f9296d4d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57" kindref="member">Type</ref></type>
        <definition>Type hise::HiseEvent::getType</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the Type of the <ref refid="classhise_1_1_hise_event" kindref="compound">HiseEvent</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="124" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1aac162d178ccdff834018e73dd94513d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String hise::HiseEvent::getTypeAsString</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getTypeAsString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a String representation of the type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="127" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="132" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1af8236b9714afdb9fa5a9479f18e3658e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::setType</definition>
        <argsstring>(Type t) noexcept</argsstring>
        <name>setType</name>
        <param>
          <type><ref refid="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57" kindref="member">Type</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Changes the type. Don&apos;t use this unless you know why. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="130" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1aa8d56a44d6dccf768343a836d2e70ddf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hise::HiseEvent::isIgnored</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isIgnored</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks if the message was marked as ignored (by a script). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="133" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="158" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a543c5b73d8ace51a87ea432aa5ad1f3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::ignoreEvent</definition>
        <argsstring>(bool shouldBeIgnored) noexcept</argsstring>
        <name>ignoreEvent</name>
        <param>
          <type>bool</type>
          <declname>shouldBeIgnored</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ignores the event. Ignored events will not be processed, but remain in the buffer (they are not cleared). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="136" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="166" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1af50afc087153cf3174757f96a711a6b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16</type>
        <definition>uint16 hise::HiseEvent::getEventId</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getEventId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the event ID of the message. The event IDs will be automatically created by HISE when it is processing the incoming MIDI messages and associates sequentially increasing IDS for each note-on and its corresponding note-off event.</para><para>Be aware the the event ID is stored as unsigned 16 bit integer, so it will wrap around<orderedlist>
<listitem><para>It&apos;s highly unlikely that you will hit any collisions, but you can&apos;t expect that older notes have a higher event ID. </para></listitem></orderedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="146" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a03b0bf9261f6a5de625e7da0b314836d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::setEventId</definition>
        <argsstring>(uint16 newEventId) noexcept</argsstring>
        <name>setEventId</name>
        <param>
          <type>uint16</type>
          <declname>newEventId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the event ID of the <ref refid="classhise_1_1_hise_event" kindref="compound">HiseEvent</ref>. Normally you don&apos;t need to do this because HISE will automatically assign this to note-on / note-off messages, but for all the types that alter an existing event (like volume-fades), this can be used for setting the target event. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="153" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a3db14736e8a3ac7a5da70fbae389c94e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::setArtificial</definition>
        <argsstring>() noexcept</argsstring>
        <name>setArtificial</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If the event was created artificially by a MIDI <ref refid="classhise_1_1_processor" kindref="compound">Processor</ref>, it will call this method. You don&apos;t need to use this yourself. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="157" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="178" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a8b849f2b3a4ba694b378328248a3eae3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hise::HiseEvent::isArtificial</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isArtificial</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if this method was created artificially.</para><para>Events that come in as MIDI message (no matter if their origin is in an actual key press or if there was a previous MIDI processor (like an arpeggiator) that created it, will be flagged as &quot;non-artificial&quot;. Events that are created within HISE are flagged as &quot;artificial&quot;.</para><para>This information can be useful sometimes in order to prevent endless recursive loops. Also, the <ref refid="classhise_1_1_hise_event_buffer_1_1_iterator" kindref="compound">HiseEventBuffer::Iterator</ref> class can be told to skip artificial events. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="169" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="185" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a3bfee2699f3c45262b2b14e652738c1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::setTransposeAmount</definition>
        <argsstring>(int newTransposeValue) noexcept</argsstring>
        <name>setTransposeAmount</name>
        <param>
          <type>int</type>
          <declname>newTransposeValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the transpose amount of the given event ID.</para><para>Unlike changing the note-number directly, this method will keep the original note number so that you don&apos;t have to process the note-off number to match the note-on.</para><para>This is the recommended way of handling all note-number processing in HISE. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="178" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1af278f37d1fe720bb2adc7186b8f99fc9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int hise::HiseEvent::getTransposeAmount</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getTransposeAmount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the transpose amount. Be aware that you need to take this into account when you need the actual note-number of an <ref refid="classhise_1_1_hise_event" kindref="compound">HiseEvent</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="183" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="183" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a67e69bb1799198e0fed9362c104e2bb1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::setCoarseDetune</definition>
        <argsstring>(int semiToneDetune) noexcept</argsstring>
        <name>setCoarseDetune</name>
        <param>
          <type>int</type>
          <declname>semiToneDetune</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the coarse detune amount in semitones. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="186" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1ac5c282e2968ccb207cfde2c9f9b44765" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int hise::HiseEvent::getCoarseDetune</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getCoarseDetune</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the coarse detune amount in semitones. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="189" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="189" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1ad5953b5c7b72be08f6bbcfa1f4acbfe7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::setFineDetune</definition>
        <argsstring>(int newCents) noexcept</argsstring>
        <name>setFineDetune</name>
        <param>
          <type>int</type>
          <declname>newCents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the fine detune amount in cents. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="192" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="192" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a7aa1634068ef9cb0678153bf093803e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int hise::HiseEvent::getFineDetune</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getFineDetune</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the fine detune amount int cents. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="195" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="195" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a90406fbadca1d7be03beef97d97c7ce9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double hise::HiseEvent::getPitchFactorForEvent</definition>
        <argsstring>() const </argsstring>
        <name>getPitchFactorForEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a ready to use pitch factor (from 0.5 ... 2.0) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="198" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="193" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a997bfe497ac79ed97417f63878a77940" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double hise::HiseEvent::getFrequency</definition>
        <argsstring>() const </argsstring>
        <name>getFrequency</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the frequency in hertz. Uses all event properties. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="201" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="202" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a59920f0b2d71cf91823030ba5e383c13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::setGain</definition>
        <argsstring>(int decibels) noexcept</argsstring>
        <name>setGain</name>
        <param>
          <type>int</type>
          <declname>decibels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the gain in decibels for this note. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="204" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="204" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a17b23823de87a33a3fc8219002a8dcad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int hise::HiseEvent::getGain</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getGain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the gain in decibels. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="207" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="207" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a19102199671e34145d90fdabd2ae8351" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float hise::HiseEvent::getGainFactor</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getGainFactor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the gain factor (from 0...1) for the given event. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="210" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="210" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a1ffa952959e5ab68d11844ab0c20732d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hise::HiseEvent::isVolumeFade</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isVolumeFade</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the event is a volume fade. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="237" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="237" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a60ad4800251443dbf614f111a37d9d65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hise::HiseEvent::isPitchFade</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isPitchFade</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the event is a pitch fade. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="240" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="240" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1af949d88ad229942c6558eb03eaa44f6e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int hise::HiseEvent::getFadeTime</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getFadeTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the fade time for both pitch and volume fades. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="243" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="243" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a17e06906982d9d1f67a951a9a64c4ae3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hise::HiseEvent::isTimerEvent</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isTimerEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the event is a timer event. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="246" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="246" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a34c0aadd36098e5f193f89c9dca9d858" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int hise::HiseEvent::getTimerIndex</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getTimerIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the index of the timer slot. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="249" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="249" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a62b5c910dba78b50c1aeca9f867adedd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hise::HiseEvent::getTimeStamp</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getTimeStamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the timestamp of the message. The timestamp is the offset from the current buffer start. If the timestamp is bigger than the current buffer size, the message will be delayed until the buffer range contains the time stamp. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="258" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="245" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a5ef49f282de130390cb5280ab7509412" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::setTimeStamp</definition>
        <argsstring>(int newTimestamp) noexcept</argsstring>
        <name>setTimeStamp</name>
        <param>
          <type>int</type>
          <declname>newTimestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the timestamp to a sample offset in the future. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="261" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="251" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a806c82ab7e531bf26cb610d23484882f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>Alignment</declname>
            <defname>Alignment</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void hise::HiseEvent::alignToRaster</definition>
        <argsstring>(int maxTimestamp) noexcept</argsstring>
        <name>alignToRaster</name>
        <param>
          <type>int</type>
          <declname>maxTimestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="263" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="263" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a857423ca97742cc3be80c575b13bdad5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::addToTimeStamp</definition>
        <argsstring>(int delta) noexcept</argsstring>
        <name>addToTimeStamp</name>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds the delta value to the timestamp. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="283" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="259" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1aa8717b7bf25015c92b709f8016f578db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int hise::HiseEvent::getChannel</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getChannel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the MIDI channel. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="286" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="286" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1ab9731045e050e03fdb5d20823ea807f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::setChannel</definition>
        <argsstring>(int newChannelNumber) noexcept</argsstring>
        <name>setChannel</name>
        <param>
          <type>int</type>
          <declname>newChannelNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the MIDI channel. Note that in HISE you have 256 MIDI channels. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="289" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="289" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1ae69c6f5331db336afe9e6a53ac2d32cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hise::HiseEvent::isNoteOn</definition>
        <argsstring>(bool returnTrueForVelocity0=false) const noexcept</argsstring>
        <name>isNoteOn</name>
        <param>
          <type>bool</type>
          <declname>returnTrueForVelocity0</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="292" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="266" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a32e87b6c5f6b574fc6cd42b49bb02e91" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hise::HiseEvent::isNoteOff</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isNoteOff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="295" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="295" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a1b519c3e552ffbaa7982b509f9f3c250" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hise::HiseEvent::isNoteOnOrOff</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isNoteOnOrOff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="298" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="298" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a906e1e085c7ee8a553b2cd58e142396f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int hise::HiseEvent::getNoteNumber</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getNoteNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="301" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="301" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a3d75916d3f41ce58d238d667bc023e61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::setNoteNumber</definition>
        <argsstring>(int newNoteNumber) noexcept</argsstring>
        <name>setNoteNumber</name>
        <param>
          <type>int</type>
          <declname>newNoteNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="304" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="273" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a73b7d59eab3bd5d844d68940580524a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8</type>
        <definition>uint8 hise::HiseEvent::getVelocity</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getVelocity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="307" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="307" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a5da85e6b3e33dcfaa07223a52393ec72" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float hise::HiseEvent::getFloatVelocity</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getFloatVelocity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="310" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="310" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1ae7e5e13b1badc0b2f0c6fbf543a5cec7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::setVelocity</definition>
        <argsstring>(uint8 newVelocity) noexcept</argsstring>
        <name>setVelocity</name>
        <param>
          <type>uint8</type>
          <declname>newVelocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="313" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="313" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1ae8be0525cb65c4aed57d060fbe1ef27d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hise::HiseEvent::isPitchWheel</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isPitchWheel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="316" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="316" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1ae260199dabf33dd220b3a0e2b5fc4dd5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hise::HiseEvent::getPitchWheelValue</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getPitchWheelValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="319" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a6916ac733390f57bd3d2a0c852be8b22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::setPitchWheelValue</definition>
        <argsstring>(int position) noexcept</argsstring>
        <name>setPitchWheelValue</name>
        <param>
          <type>int</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="322" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="285" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a1796bb30648a2126ccf2a8d64129cb09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::setFadeTime</definition>
        <argsstring>(int fadeTime) noexcept</argsstring>
        <name>setFadeTime</name>
        <param>
          <type>int</type>
          <declname>fadeTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the fade time for the event type. Only valid for VolumeFade and PitchFade types. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="325" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="325" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1ae47b38046462684e4604fc7b88251f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::setStartOffset</definition>
        <argsstring>(uint16 startOffset) noexcept</argsstring>
        <name>setStartOffset</name>
        <param>
          <type>uint16</type>
          <declname>startOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a offset to the event. Unlike the timestamp, this will not delay the event to the future, but tell the sound generator to skip the given amount when the voice starts. This can be used for eg. skipping the attack phase of samples. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="333" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="291" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a3e706ca3107e72ed82cbc046abb0a9f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint16</type>
        <definition>uint16 hise::HiseEvent::getStartOffset</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getStartOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the start offset of the event. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="336" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="296" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a95a9f2a1816ac1c3fec552e07a78d160" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hise::HiseEvent::isChannelPressure</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isChannelPressure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="339" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="339" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1ae14495942297baeab18fc0a72e6eb7b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int hise::HiseEvent::getChannelPressureValue</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getChannelPressureValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="342" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="342" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1ac004e2e83a69e1662d1ca0cc6b4eedf3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::setChannelPressureValue</definition>
        <argsstring>(int pressure) noexcept</argsstring>
        <name>setChannelPressureValue</name>
        <param>
          <type>int</type>
          <declname>pressure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="345" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="345" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1afba1ae1008d7491d9d46bdc02761f8c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hise::HiseEvent::isAftertouch</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isAftertouch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="348" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="348" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1ad744fe0f1d397bc128cdef247b08583c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int hise::HiseEvent::getAfterTouchValue</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getAfterTouchValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="351" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="351" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a0ac7c5d6db1ac1ae8efa1ec32f22af55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::setAfterTouchValue</definition>
        <argsstring>(int noteNumber, int aftertouchAmount) noexcept</argsstring>
        <name>setAfterTouchValue</name>
        <param>
          <type>int</type>
          <declname>noteNumber</declname>
        </param>
        <param>
          <type>int</type>
          <declname>aftertouchAmount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="354" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="354" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1aeaa148c544bbaa6ba9ba445d569cd895" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hise::HiseEvent::isController</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isController</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="357" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="357" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a5ae89ea54ce94a2f0624f9d09fbf8e79" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hise::HiseEvent::isControllerOfType</definition>
        <argsstring>(int controllerType) const noexcept</argsstring>
        <name>isControllerOfType</name>
        <param>
          <type>int</type>
          <declname>controllerType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="360" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="360" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a019844075e6fa2025921717ed9aafab7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int hise::HiseEvent::getControllerNumber</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getControllerNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="363" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="363" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a487ec8eb774e001d5ae6937ca6c535d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int hise::HiseEvent::getControllerValue</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getControllerValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="366" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="366" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1af753d993d0088c65c557c7973ddc080e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::setControllerNumber</definition>
        <argsstring>(int controllerNumber) noexcept</argsstring>
        <name>setControllerNumber</name>
        <param>
          <type>int</type>
          <declname>controllerNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="369" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="369" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a220a3a8d0ab6ff007f414a054d956625" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::setControllerValue</definition>
        <argsstring>(int controllerValue) noexcept</argsstring>
        <name>setControllerValue</name>
        <param>
          <type>int</type>
          <declname>controllerValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="372" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="372" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a67732b30fd78fcb7057152ac3f9fb3ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hise::HiseEvent::isProgramChange</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isProgramChange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="375" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="375" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a58649dbed0a362086d41b1ec914b1595" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int hise::HiseEvent::getProgramChangeNumber</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getProgramChangeNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="378" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="378" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a939cb89354f362bba36447ac77537f6f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hise::HiseEvent::isEmpty</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the <ref refid="classhise_1_1_hise_event" kindref="compound">HiseEvent</ref> is empty. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="381" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="381" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1ab136ecef30b7a484793c1d7a45192e32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hise::HiseEvent::isAllNotesOff</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isAllNotesOff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="384" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="384" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a45e34822cfac2a63b060b88d58c465cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hise::HiseEvent::isMidiStart</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isMidiStart</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="387" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="387" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a2928c2b25554562239aeeaa49d9f5b3b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hise::HiseEvent::isMidiStop</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isMidiStop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="390" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="390" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1ae2eb3c6a16d8225fb906e85008cba758" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hise::HiseEvent::isSongPositionPointer</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isSongPositionPointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="393" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="393" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a6d7284a6ddd49aa684282ceab47c3ffd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int hise::HiseEvent::getSongPositionPointerMidiBeat</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getSongPositionPointerMidiBeat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="396" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="396" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1ac5ab5f453c97308fc68b5df8ac15078d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hise::HiseEvent::setSongPositionValue</definition>
        <argsstring>(int positionInMidiBeats)</argsstring>
        <name>setSongPositionValue</name>
        <param>
          <type>int</type>
          <declname>positionInMidiBeats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copied from MidiMessage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="399" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="301" bodyend="305"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classhise_1_1_hise_event_1adf23383fcb39583d81ff8275b35c9b74" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhise_1_1_hise_event" kindref="compound">HiseEvent</ref></type>
        <definition>HiseEvent hise::HiseEvent::createVolumeFade</definition>
        <argsstring>(uint16 eventId, int fadeTimeMilliseconds, int8 targetValue)</argsstring>
        <name>createVolumeFade</name>
        <param>
          <type>uint16</type>
          <declname>eventId</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fadeTimeMilliseconds</declname>
        </param>
        <param>
          <type>int8</type>
          <declname>targetValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a volume fade. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eventId</parametername>
</parameternamelist>
<parameterdescription>
<para>the event ID that this fade should be applied to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fadeTimeMilliseconds</parametername>
</parameternamelist>
<parameterdescription>
<para>the fade time (it will be a linear fade).  the target gain in decibels. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="217" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="210" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a0a2a502bf8866857f3306e55e72c01df" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhise_1_1_hise_event" kindref="compound">HiseEvent</ref></type>
        <definition>HiseEvent hise::HiseEvent::createPitchFade</definition>
        <argsstring>(uint16 eventId, int fadeTimeMilliseconds, int8 coarseTune, int8 fineTune)</argsstring>
        <name>createPitchFade</name>
        <param>
          <type>uint16</type>
          <declname>eventId</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fadeTimeMilliseconds</declname>
        </param>
        <param>
          <type>int8</type>
          <declname>coarseTune</declname>
        </param>
        <param>
          <type>int8</type>
          <declname>fineTune</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a pitch fade. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eventID</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID of the event that will be changed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fadeTimeMilliseconds</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the fade. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coarseTune</parametername>
</parameternamelist>
<parameterdescription>
<para>the target pitch in semitones </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fineTune</parametername>
</parameternamelist>
<parameterdescription>
<para>the target pitch detune in cent. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="225" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="222" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a708c796d3213dd47a4f10849c1249555" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhise_1_1_hise_event" kindref="compound">HiseEvent</ref></type>
        <definition>HiseEvent hise::HiseEvent::createTimerEvent</definition>
        <argsstring>(uint8 timerIndex, int offset)</argsstring>
        <name>createTimerEvent</name>
        <param>
          <type>uint8</type>
          <declname>timerIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a timer event. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timerIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>There are 4 timer slots per sound generator and this will contain the index (0-3). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>the sample offset within the current buffer [0 - buffer size). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="232" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.cpp" bodystart="235" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1_hise_event_1a71f4e2643ac5d555fc1d97cd545ed879" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hise::HiseEvent::clear</definition>
        <argsstring>(HiseEvent *eventToClear, int numEvents=1)</argsstring>
        <name>clear</name>
        <param>
          <type><ref refid="classhise_1_1_hise_event" kindref="compound">HiseEvent</ref> *</type>
          <declname>eventToClear</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numEvents</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This clears the events using the fast memset operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="402" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="402" bodyend="405"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The event type of HISE.</para><para>This is an enhancement of the MIDI Standard and is used for all internal events in the audio path of HISE.</para><para>The MIDI standard (and its implementation of JUCE) have a few limitations and misses some convenient data. Therefore, a new event type was introduced, with the following additions:</para><para><itemizedlist>
<listitem><para>fixed size. The MIDI message has to have a dynamic size for handling SysEx messages, which is not used in 99,9999% of all cases. The <ref refid="classhise_1_1_hise_event" kindref="compound">HiseEvent</ref> simply ignores SysEx (there are better ways to communicate bigger chunks of data anyways) and uses a fixed size of 128bit per message. This makes copying / clearing the <ref refid="classhise_1_1_hise_event_buffer" kindref="compound">HiseEventBuffer</ref> trivially fast (just a memset / memcpy)</para></listitem><listitem><para>note-on / note-off messages will be associated with a unique index (the EventID), which can be used to alter all voices that are started by the event.</para></listitem><listitem><para>more types for internal actions like timer events, pitch / volume fades</para></listitem><listitem><para>a timestamp that is baked into the message.</para></listitem><listitem><para>128 channels instead of 16 MIDI channels. 16 is a pretty low number and if you use the channel information to route the signals to certain Processors, you might hit this limitation pretty easily.</para></listitem><listitem><para>a transpose amount that will be added on top of the actual note number. This heavily simplifies any MIDI processing that changes the note number because the note off event does not need to be transposed to match the note on in order to prevent stuck notes</para></listitem><listitem><para>a few flags that describe the state and origin of the note (whether the message should be processed at all or if it was created internally).</para></listitem></itemizedlist>
</para><para>Most of its methods aim to be fully compatible to the juce::MidiMessage class, so if you&apos;re used to this class, you will find your way around this class pretty quickly. </para>    </detaileddescription>
    <location file="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" line="77" column="1" bodyfile="D:/Development/HISE modules/hi_tools/hi_tools/HiseEventBuffer.h" bodystart="76" bodyend="466"/>
    <listofallmembers>
      <member refid="classhise_1_1_hise_event_1a857423ca97742cc3be80c575b13bdad5" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>addToTimeStamp</name></member>
      <member refid="classhise_1_1_hise_event_1a806c82ab7e531bf26cb610d23484882f" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>alignToRaster</name></member>
      <member refid="classhise_1_1_hise_event_1a69b6f4c80c603ae83db17c586d5710d1" prot="private" virt="non-virtual"><scope>hise::HiseEvent</scope><name>cents</name></member>
      <member refid="classhise_1_1_hise_event_1a22e3d5a3c27e2b4e56f66089a3a5c3cb" prot="private" virt="non-virtual"><scope>hise::HiseEvent</scope><name>channel</name></member>
      <member refid="classhise_1_1_hise_event_1a71f4e2643ac5d555fc1d97cd545ed879" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>clear</name></member>
      <member refid="classhise_1_1_hise_event_1a0a2a502bf8866857f3306e55e72c01df" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>createPitchFade</name></member>
      <member refid="classhise_1_1_hise_event_1a708c796d3213dd47a4f10849c1249555" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>createTimerEvent</name></member>
      <member refid="classhise_1_1_hise_event_1adf23383fcb39583d81ff8275b35c9b74" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>createVolumeFade</name></member>
      <member refid="classhise_1_1_hise_event_1aef2b7dab48aaaaec079599d37ae6d535" prot="private" virt="non-virtual"><scope>hise::HiseEvent</scope><name>eventId</name></member>
      <member refid="classhise_1_1_hise_event_1ae77360edecc4f0072c35ec2027f320ad" prot="private" virt="non-virtual"><scope>hise::HiseEvent</scope><name>gain</name></member>
      <member refid="classhise_1_1_hise_event_1ad744fe0f1d397bc128cdef247b08583c" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getAfterTouchValue</name></member>
      <member refid="classhise_1_1_hise_event_1aa8717b7bf25015c92b709f8016f578db" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getChannel</name></member>
      <member refid="classhise_1_1_hise_event_1ae14495942297baeab18fc0a72e6eb7b7" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getChannelPressureValue</name></member>
      <member refid="classhise_1_1_hise_event_1ac5c282e2968ccb207cfde2c9f9b44765" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getCoarseDetune</name></member>
      <member refid="classhise_1_1_hise_event_1a019844075e6fa2025921717ed9aafab7" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getControllerNumber</name></member>
      <member refid="classhise_1_1_hise_event_1a487ec8eb774e001d5ae6937ca6c535d2" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getControllerValue</name></member>
      <member refid="classhise_1_1_hise_event_1af50afc087153cf3174757f96a711a6b9" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getEventId</name></member>
      <member refid="classhise_1_1_hise_event_1af949d88ad229942c6558eb03eaa44f6e" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getFadeTime</name></member>
      <member refid="classhise_1_1_hise_event_1a7aa1634068ef9cb0678153bf093803e3" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getFineDetune</name></member>
      <member refid="classhise_1_1_hise_event_1a5da85e6b3e33dcfaa07223a52393ec72" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getFloatVelocity</name></member>
      <member refid="classhise_1_1_hise_event_1a997bfe497ac79ed97417f63878a77940" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getFrequency</name></member>
      <member refid="classhise_1_1_hise_event_1a17b23823de87a33a3fc8219002a8dcad" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getGain</name></member>
      <member refid="classhise_1_1_hise_event_1a19102199671e34145d90fdabd2ae8351" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getGainFactor</name></member>
      <member refid="classhise_1_1_hise_event_1a906e1e085c7ee8a553b2cd58e142396f" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getNoteNumber</name></member>
      <member refid="classhise_1_1_hise_event_1a90406fbadca1d7be03beef97d97c7ce9" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getPitchFactorForEvent</name></member>
      <member refid="classhise_1_1_hise_event_1ae260199dabf33dd220b3a0e2b5fc4dd5" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getPitchWheelValue</name></member>
      <member refid="classhise_1_1_hise_event_1a58649dbed0a362086d41b1ec914b1595" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getProgramChangeNumber</name></member>
      <member refid="classhise_1_1_hise_event_1a6d7284a6ddd49aa684282ceab47c3ffd" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getSongPositionPointerMidiBeat</name></member>
      <member refid="classhise_1_1_hise_event_1a3e706ca3107e72ed82cbc046abb0a9f4" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getStartOffset</name></member>
      <member refid="classhise_1_1_hise_event_1a34c0aadd36098e5f193f89c9dca9d858" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getTimerIndex</name></member>
      <member refid="classhise_1_1_hise_event_1a62b5c910dba78b50c1aeca9f867adedd" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getTimeStamp</name></member>
      <member refid="classhise_1_1_hise_event_1af278f37d1fe720bb2adc7186b8f99fc9" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getTransposeAmount</name></member>
      <member refid="classhise_1_1_hise_event_1a1dc5ec8e5d8a79c753446f7f9296d4d6" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getType</name></member>
      <member refid="classhise_1_1_hise_event_1aac162d178ccdff834018e73dd94513d6" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getTypeAsString</name></member>
      <member refid="classhise_1_1_hise_event_1a73b7d59eab3bd5d844d68940580524a2" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>getVelocity</name></member>
      <member refid="classhise_1_1_hise_event_1ab53eeb944ad2d1dbbebcdb197372837f" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>HiseEvent</name></member>
      <member refid="classhise_1_1_hise_event_1a3356e667ae8c81b6254ec4989e896de2" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>HiseEvent</name></member>
      <member refid="classhise_1_1_hise_event_1ad7d9324985507034cc39fd372fcc2799" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>HiseEvent</name></member>
      <member refid="classhise_1_1_hise_event_1a16901bc947430dcd74bf9576461d5369" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>HiseEvent</name></member>
      <member refid="classhise_1_1_hise_event_1a543c5b73d8ace51a87ea432aa5ad1f3f" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>ignoreEvent</name></member>
      <member refid="classhise_1_1_hise_event_1afba1ae1008d7491d9d46bdc02761f8c1" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>isAftertouch</name></member>
      <member refid="classhise_1_1_hise_event_1ab136ecef30b7a484793c1d7a45192e32" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>isAllNotesOff</name></member>
      <member refid="classhise_1_1_hise_event_1a8b849f2b3a4ba694b378328248a3eae3" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>isArtificial</name></member>
      <member refid="classhise_1_1_hise_event_1a95a9f2a1816ac1c3fec552e07a78d160" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>isChannelPressure</name></member>
      <member refid="classhise_1_1_hise_event_1aeaa148c544bbaa6ba9ba445d569cd895" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>isController</name></member>
      <member refid="classhise_1_1_hise_event_1a5ae89ea54ce94a2f0624f9d09fbf8e79" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>isControllerOfType</name></member>
      <member refid="classhise_1_1_hise_event_1a939cb89354f362bba36447ac77537f6f" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>isEmpty</name></member>
      <member refid="classhise_1_1_hise_event_1aa8d56a44d6dccf768343a836d2e70ddf" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>isIgnored</name></member>
      <member refid="classhise_1_1_hise_event_1a45e34822cfac2a63b060b88d58c465cb" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>isMidiStart</name></member>
      <member refid="classhise_1_1_hise_event_1a2928c2b25554562239aeeaa49d9f5b3b" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>isMidiStop</name></member>
      <member refid="classhise_1_1_hise_event_1a32e87b6c5f6b574fc6cd42b49bb02e91" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>isNoteOff</name></member>
      <member refid="classhise_1_1_hise_event_1ae69c6f5331db336afe9e6a53ac2d32cf" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>isNoteOn</name></member>
      <member refid="classhise_1_1_hise_event_1a1b519c3e552ffbaa7982b509f9f3c250" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>isNoteOnOrOff</name></member>
      <member refid="classhise_1_1_hise_event_1a60ad4800251443dbf614f111a37d9d65" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>isPitchFade</name></member>
      <member refid="classhise_1_1_hise_event_1ae8be0525cb65c4aed57d060fbe1ef27d" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>isPitchWheel</name></member>
      <member refid="classhise_1_1_hise_event_1a67732b30fd78fcb7057152ac3f9fb3ff" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>isProgramChange</name></member>
      <member refid="classhise_1_1_hise_event_1ae2eb3c6a16d8225fb906e85008cba758" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>isSongPositionPointer</name></member>
      <member refid="classhise_1_1_hise_event_1a17e06906982d9d1f67a951a9a64c4ae3" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>isTimerEvent</name></member>
      <member refid="classhise_1_1_hise_event_1a1ffa952959e5ab68d11844ab0c20732d" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>isVolumeFade</name></member>
      <member refid="classhise_1_1_hise_event_1a29b2105be84a171877e4f6badad767de" prot="private" virt="non-virtual"><scope>hise::HiseEvent</scope><name>number</name></member>
      <member refid="classhise_1_1_hise_event_1a2602b9de95fc3b36e63f3f11a354630f" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>operator==</name></member>
      <member refid="classhise_1_1_hise_event_1a762cf8d0baa660de3c495e47b8b7cf18" prot="private" virt="non-virtual"><scope>hise::HiseEvent</scope><name>semitones</name></member>
      <member refid="classhise_1_1_hise_event_1a0ac7c5d6db1ac1ae8efa1ec32f22af55" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>setAfterTouchValue</name></member>
      <member refid="classhise_1_1_hise_event_1a3db14736e8a3ac7a5da70fbae389c94e" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>setArtificial</name></member>
      <member refid="classhise_1_1_hise_event_1ab9731045e050e03fdb5d20823ea807f9" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>setChannel</name></member>
      <member refid="classhise_1_1_hise_event_1ac004e2e83a69e1662d1ca0cc6b4eedf3" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>setChannelPressureValue</name></member>
      <member refid="classhise_1_1_hise_event_1a67e69bb1799198e0fed9362c104e2bb1" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>setCoarseDetune</name></member>
      <member refid="classhise_1_1_hise_event_1af753d993d0088c65c557c7973ddc080e" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>setControllerNumber</name></member>
      <member refid="classhise_1_1_hise_event_1a220a3a8d0ab6ff007f414a054d956625" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>setControllerValue</name></member>
      <member refid="classhise_1_1_hise_event_1a03b0bf9261f6a5de625e7da0b314836d" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>setEventId</name></member>
      <member refid="classhise_1_1_hise_event_1a1796bb30648a2126ccf2a8d64129cb09" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>setFadeTime</name></member>
      <member refid="classhise_1_1_hise_event_1ad5953b5c7b72be08f6bbcfa1f4acbfe7" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>setFineDetune</name></member>
      <member refid="classhise_1_1_hise_event_1a59920f0b2d71cf91823030ba5e383c13" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>setGain</name></member>
      <member refid="classhise_1_1_hise_event_1a3d75916d3f41ce58d238d667bc023e61" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>setNoteNumber</name></member>
      <member refid="classhise_1_1_hise_event_1a6916ac733390f57bd3d2a0c852be8b22" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>setPitchWheelValue</name></member>
      <member refid="classhise_1_1_hise_event_1ac5ab5f453c97308fc68b5df8ac15078d" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>setSongPositionValue</name></member>
      <member refid="classhise_1_1_hise_event_1ae47b38046462684e4604fc7b88251f7e" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>setStartOffset</name></member>
      <member refid="classhise_1_1_hise_event_1a5ef49f282de130390cb5280ab7509412" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>setTimeStamp</name></member>
      <member refid="classhise_1_1_hise_event_1a3bfee2699f3c45262b2b14e652738c1a" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>setTransposeAmount</name></member>
      <member refid="classhise_1_1_hise_event_1af8236b9714afdb9fa5a9479f18e3658e" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>setType</name></member>
      <member refid="classhise_1_1_hise_event_1ae7e5e13b1badc0b2f0c6fbf543a5cec7" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>setVelocity</name></member>
      <member refid="classhise_1_1_hise_event_1a45c48dfbf30e6261e7a531f03e748ef5" prot="private" virt="non-virtual"><scope>hise::HiseEvent</scope><name>startOffset</name></member>
      <member refid="classhise_1_1_hise_event_1aa36f2384615dc3710a675f58a9fa345d" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>swapWith</name></member>
      <member refid="classhise_1_1_hise_event_1a0e04475a3c8322a1ee35cefddd82b0f8" prot="private" virt="non-virtual"><scope>hise::HiseEvent</scope><name>timestamp</name></member>
      <member refid="classhise_1_1_hise_event_1ac18efb9afa0f633b82cb3e7476b1018b" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>toMidiMesage</name></member>
      <member refid="classhise_1_1_hise_event_1a9f301962e8470b182ebf566de219c2d8" prot="private" virt="non-virtual"><scope>hise::HiseEvent</scope><name>transposeValue</name></member>
      <member refid="classhise_1_1_hise_event_1aa50a86d272f03f1b1886fcf20b8b2f25" prot="private" virt="non-virtual"><scope>hise::HiseEvent</scope><name>type</name></member>
      <member refid="classhise_1_1_hise_event_1a201f65b87c39229c43e41db2df5e9c57" prot="public" virt="non-virtual"><scope>hise::HiseEvent</scope><name>Type</name></member>
      <member refid="classhise_1_1_hise_event_1a8bdc4561814104fa123b5c81961ffd33" prot="private" virt="non-virtual"><scope>hise::HiseEvent</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
