<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classhise_1_1raw_1_1_reference" kind="class" prot="public">
    <compoundname>hise::raw::Reference</compoundname>
    <basecompoundref refid="classhise_1_1_controlled_object" prot="public" virt="non-virtual">hise::ControlledObject</basecompoundref>
    <basecompoundref refid="classhise_1_1_safe_change_listener" prot="private" virt="non-virtual">hise::SafeChangeListener</basecompoundref>
    <includes refid="raw__misc_8h" local="no">raw_misc.h</includes>
    <innerclass refid="structhise_1_1raw_1_1_reference_1_1_parameter_value" prot="private">hise::raw::Reference::ParameterValue</innerclass>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>ProcessorType</declname>
        <defname>ProcessorType</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classhise_1_1raw_1_1_reference_1a63e34e87742cbd66abdf09ef59cc8b2b" prot="public" static="no">
        <type>std::function&lt; void(float newValue)&gt;</type>
        <definition>using hise::raw::Reference&lt; ProcessorType &gt;::ParameterCallback =  std::function&lt;void(float newValue)&gt;</definition>
        <argsstring></argsstring>
        <name>ParameterCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A lambda that will be executed when the parameter changes. The newValue argument will contain the current value. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_modules/raw/raw_misc.h" line="142" column="1" bodyfile="D:/Development/HISE modules/hi_modules/raw/raw_misc.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhise_1_1raw_1_1_reference_1a1b0e4c4a433ba3b1cfbde37b323b3343" prot="private" static="no" mutable="no">
        <type>Array&lt; ParameterValue &gt;</type>
        <definition>Array&lt;ParameterValue&gt; hise::raw::Reference&lt; ProcessorType &gt;::watchedParameters</definition>
        <argsstring></argsstring>
        <name>watchedParameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_modules/raw/raw_misc.h" line="170" column="1" bodyfile="D:/Development/HISE modules/hi_modules/raw/raw_misc.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhise_1_1raw_1_1_reference_1a4fd2e7930857a769a6920ec700beaa23" prot="private" static="no" mutable="no">
        <type>WeakReference&lt; ProcessorType &gt;</type>
        <definition>WeakReference&lt;ProcessorType&gt; hise::raw::Reference&lt; ProcessorType &gt;::processor</definition>
        <argsstring></argsstring>
        <name>processor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_modules/raw/raw_misc.h" line="172" column="1" bodyfile="D:/Development/HISE modules/hi_modules/raw/raw_misc.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhise_1_1raw_1_1_reference_1a9451e4c89947f8e22bd8f6e89ddc2738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hise::raw::Reference&lt; ProcessorType &gt;::Reference</definition>
        <argsstring>(MainController *mc, const String &amp;id=String(), bool addAsListener=false)</argsstring>
        <name>Reference</name>
        <param>
          <type><ref refid="classhise_1_1_main_controller" kindref="compound">MainController</ref> *</type>
          <declname>mc</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>id</declname>
          <defval>String()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>addAsListener</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a reference to the processor with the given ID. If the ID is empty, it just looks for the first processor of the specified type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_modules/raw/raw_misc.h" line="145" column="1" bodyfile="D:/Development/HISE modules/hi_modules/raw/raw_misc_impl.h" bodystart="42" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1raw_1_1_reference_1a257ccebabc1688b8e377ec3ea95c3f55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hise::raw::Reference&lt; ProcessorType &gt;::~Reference</definition>
        <argsstring>()</argsstring>
        <name>~Reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_modules/raw/raw_misc.h" line="146" column="1" bodyfile="D:/Development/HISE modules/hi_modules/raw/raw_misc_impl.h" bodystart="65" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1raw_1_1_reference_1a0cdc8fb8a31536dca25dc69cb87224ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hise::raw::Reference&lt; ProcessorType &gt;::addParameterToWatch</definition>
        <argsstring>(int parameterIndex, const ParameterCallback &amp;callbackFunction)</argsstring>
        <name>addParameterToWatch</name>
        <param>
          <type>int</type>
          <declname>parameterIndex</declname>
        </param>
        <param>
          <type>const <ref refid="classhise_1_1raw_1_1_reference_1a63e34e87742cbd66abdf09ef59cc8b2b" kindref="member">ParameterCallback</ref> &amp;</type>
          <declname>callbackFunction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a lambda callback to a dedicated parameter that will be fired on changes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_modules/raw/raw_misc.h" line="149" column="1" bodyfile="D:/Development/HISE modules/hi_modules/raw/raw_misc_impl.h" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1raw_1_1_reference_1a942a9705694efbde48d95facd6f74a3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ProcessorType *</type>
        <definition>ProcessorType * hise::raw::Reference&lt; ProcessorType &gt;::getProcessor</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getProcessor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a raw pointer to the connected <ref refid="classhise_1_1_processor" kindref="compound">Processor</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_modules/raw/raw_misc.h" line="152" column="1" bodyfile="D:/Development/HISE modules/hi_modules/raw/raw_misc_impl.h" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1raw_1_1_reference_1affcc1a55c3681e0b21916eeafb865e4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ProcessorType *</type>
        <definition>ProcessorType* hise::raw::Reference&lt; ProcessorType &gt;::operator-&gt;</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_modules/raw/raw_misc.h" line="154" column="1" bodyfile="D:/Development/HISE modules/hi_modules/raw/raw_misc.h" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1raw_1_1_reference_1a493a7747001f142622b8cdb3bb9ba12c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const ProcessorType *</type>
        <definition>const ProcessorType* hise::raw::Reference&lt; ProcessorType &gt;::operator-&gt;</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_modules/raw/raw_misc.h" line="155" column="1" bodyfile="D:/Development/HISE modules/hi_modules/raw/raw_misc.h" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classhise_1_1raw_1_1_reference_1a045024545387201319238214abc240b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hise::raw::Reference&lt; ProcessorType &gt;::operator ProcessorType *</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator ProcessorType *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_modules/raw/raw_misc.h" line="157" column="1" bodyfile="D:/Development/HISE modules/hi_modules/raw/raw_misc.h" bodystart="157" bodyend="157"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhise_1_1raw_1_1_reference_1a0d0ed2a2c05448a50ebc36ed59bca849" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void hise::raw::Reference&lt; ProcessorType &gt;::changeListenerCallback</definition>
        <argsstring>(SafeChangeBroadcaster *) override</argsstring>
        <name>changeListenerCallback</name>
        <reimplements refid="classhise_1_1_safe_change_listener_1a7d352b736c554de3e9b714a4be6997a0">changeListenerCallback</reimplements>
        <param>
          <type><ref refid="classhise_1_1_safe_change_broadcaster" kindref="compound">SafeChangeBroadcaster</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overwrite this and handle the message. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/HISE modules/hi_modules/raw/raw_misc.h" line="161" column="1" bodyfile="D:/Development/HISE modules/hi_modules/raw/raw_misc_impl.h" bodystart="82" bodyend="95"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A lightweight wrapper around a <ref refid="classhise_1_1_processor" kindref="compound">Processor</ref> in the HISE signal path.</para><para>This object can be used as a wrapper around one of the <ref refid="classhise_1_1_processor" kindref="compound">Processor</ref> modules in your HISE project. Upon creation, it will search for the given ID (or use the first module that matches the type if the ID is not supplied).</para><para>If desired, it will also be notified about changes to a parameter which can be used to update the UI.</para><para><programlisting><codeline><highlight class="normal">Reference&lt;hise::PolyFilterEffect&gt;<sp/>polyFilter(mc,<sp/></highlight><highlight class="stringliteral">&quot;MyFunkyFilter&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classhise_1_1raw_1_1_reference_1a63e34e87742cbd66abdf09ef59cc8b2b" kindref="member">ParameterCallback</ref><sp/>update<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newValue)<sp/></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;frequencySlider-&gt;setValue(newValue,<sp/>dontSendNotification);<sp/></highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">polyFilter.addParameterToWatch(hise::MonoFilterEffect::Frequency,<sp/>update);</highlight></codeline>
</programlisting></para><para>If you want a bidirectional connection between UI and the processor, take a look at the <ref refid="classhise_1_1raw_1_1_u_i_connection" kindref="compound">UIConnection</ref> classes, which offer ready made listeners / updaters for some of the basic JUCE widgets (Slider, ComboBox, Button) </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2753">
        <label>hise::SafeChangeListener</label>
        <link refid="classhise_1_1_safe_change_listener"/>
      </node>
      <node id="2751">
        <label>hise::raw::Reference&lt; ProcessorType &gt;</label>
        <link refid="classhise_1_1raw_1_1_reference"/>
        <childnode refid="2752" relation="public-inheritance">
        </childnode>
        <childnode refid="2753" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2752">
        <label>hise::ControlledObject</label>
        <link refid="classhise_1_1_controlled_object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2756">
        <label>hise::SafeChangeListener</label>
        <link refid="classhise_1_1_safe_change_listener"/>
      </node>
      <node id="2754">
        <label>hise::raw::Reference&lt; ProcessorType &gt;</label>
        <link refid="classhise_1_1raw_1_1_reference"/>
        <childnode refid="2755" relation="public-inheritance">
        </childnode>
        <childnode refid="2756" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2755">
        <label>hise::ControlledObject</label>
        <link refid="classhise_1_1_controlled_object"/>
      </node>
    </collaborationgraph>
    <location file="D:/Development/HISE modules/hi_modules/raw/raw_misc.h" line="138" column="1" bodyfile="D:/Development/HISE modules/hi_modules/raw/raw_misc.h" bodystart="136" bodyend="173"/>
    <listofallmembers>
      <member refid="classhise_1_1raw_1_1_reference_1a0cdc8fb8a31536dca25dc69cb87224ea" prot="public" virt="non-virtual"><scope>hise::raw::Reference</scope><name>addParameterToWatch</name></member>
      <member refid="classhise_1_1raw_1_1_reference_1a0d0ed2a2c05448a50ebc36ed59bca849" prot="private" virt="virtual"><scope>hise::raw::Reference</scope><name>changeListenerCallback</name></member>
      <member refid="classhise_1_1_controlled_object_1a5939c875190a8c6b985f2ad8c5cf3107" prot="public" virt="non-virtual"><scope>hise::raw::Reference</scope><name>ControlledObject</name></member>
      <member refid="classhise_1_1_controlled_object_1ae8e59a6130e7af1ac02a999168946795" prot="public" virt="non-virtual"><scope>hise::raw::Reference</scope><name>getMainController</name></member>
      <member refid="classhise_1_1_controlled_object_1aeb7312c0b6e319daae2f155f3dcab1f7" prot="public" virt="non-virtual"><scope>hise::raw::Reference</scope><name>getMainController</name></member>
      <member refid="classhise_1_1raw_1_1_reference_1a942a9705694efbde48d95facd6f74a3a" prot="public" virt="non-virtual"><scope>hise::raw::Reference</scope><name>getProcessor</name></member>
      <member refid="classhise_1_1_safe_change_listener_1ad705ac541e71e65613e0d03b7b59855f" prot="private" virt="non-virtual"><scope>hise::raw::Reference</scope><name>handlePooledMessage</name></member>
      <member refid="classhise_1_1_controlled_object_1a008d5066f54e27a36ab2a803fcf76bc8" prot="public" virt="virtual"><scope>hise::raw::Reference</scope><name>mainControllerIsDeleted</name></member>
      <member refid="classhise_1_1raw_1_1_reference_1a045024545387201319238214abc240b4" prot="public" virt="non-virtual"><scope>hise::raw::Reference</scope><name>operator ProcessorType *</name></member>
      <member refid="classhise_1_1raw_1_1_reference_1affcc1a55c3681e0b21916eeafb865e4d" prot="public" virt="non-virtual"><scope>hise::raw::Reference</scope><name>operator-&gt;</name></member>
      <member refid="classhise_1_1raw_1_1_reference_1a493a7747001f142622b8cdb3bb9ba12c" prot="public" virt="non-virtual"><scope>hise::raw::Reference</scope><name>operator-&gt;</name></member>
      <member refid="classhise_1_1raw_1_1_reference_1a63e34e87742cbd66abdf09ef59cc8b2b" prot="public" virt="non-virtual"><scope>hise::raw::Reference</scope><name>ParameterCallback</name></member>
      <member refid="classhise_1_1raw_1_1_reference_1a4fd2e7930857a769a6920ec700beaa23" prot="private" virt="non-virtual"><scope>hise::raw::Reference</scope><name>processor</name></member>
      <member refid="classhise_1_1raw_1_1_reference_1a9451e4c89947f8e22bd8f6e89ddc2738" prot="public" virt="non-virtual"><scope>hise::raw::Reference</scope><name>Reference</name></member>
      <member refid="classhise_1_1raw_1_1_reference_1a1b0e4c4a433ba3b1cfbde37b323b3343" prot="private" virt="non-virtual"><scope>hise::raw::Reference</scope><name>watchedParameters</name></member>
      <member refid="classhise_1_1_controlled_object_1a7671d32f27b658b281a1daee2ed4ffe8" prot="public" virt="virtual"><scope>hise::raw::Reference</scope><name>~ControlledObject</name></member>
      <member refid="classhise_1_1_pooled_u_i_updater_1_1_listener_1ad7a95d94b5cf53925f8ee47175c62656" prot="private" virt="virtual"><scope>hise::raw::Reference</scope><name>~Listener</name></member>
      <member refid="classhise_1_1raw_1_1_reference_1a257ccebabc1688b8e377ec3ea95c3f55" prot="public" virt="non-virtual"><scope>hise::raw::Reference</scope><name>~Reference</name></member>
      <member refid="classhise_1_1_safe_change_listener_1a36cdd98d4d077cff331b0f297be1c5cd" prot="private" virt="virtual"><scope>hise::raw::Reference</scope><name>~SafeChangeListener</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
